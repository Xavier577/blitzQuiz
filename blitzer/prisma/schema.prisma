generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  firstName   String       @map("first_name")
  lastName    String       @map("last_name")
  email       String       @unique
  password    String
  userId      String       @unique @default(uuid()) @map("user_id")
  quizzes     Quiz[]
  submissions Submission[]

  @@map("users")
}

model Quiz {
  id                       Int          @id @default(autoincrement())
  quizId                   String       @unique @default(uuid()) @map("quiz_id")
  title                    String
  timed                    Boolean      @default(false)
  timeLimit                Int          @default(0)
  expire                   Int          @default(86400000)
  maximumNumberOfQuestions Int
  marksPerQuestion         Int
  creator                  User         @relation(fields: [creatorId], references: [userId])
  creatorId                String       @map("creator_id")
  questions                Question[]
  submission               Submission[]

  @@map("quizzes")
}

model Submission {
  id               Int               @id @default(autoincrement())
  submissionId     String            @unique @default(uuid())
  quiz             Quiz              @relation(fields: [quizId], references: [quizId])
  quizId           String            @map("quiz_id")
  user             User              @relation(fields: [userId], references: [userId])
  userId           String            @map("user_id")
  submittedAnswers SubmittedAnswer[]
  quizResult       QuizResult?

  @@map("submissions")
}

model SubmittedAnswer {
  id           Int        @id @default(autoincrement())
  chosenOption Options    @map("chosen_option")
  submission   Submission @relation(fields: [submissionId], references: [submissionId])
  submissionId String     @map("submission_id")

  @@map("submitted_answers")
}

model QuizResult {
  id           Int        @id @default(autoincrement())
  score        Float
  submission   Submission @relation(fields: [submissionId], references: [submissionId])
  submissionId String     @unique

  @@map("quiz_results")
}

model Question {
  id       Int      @id @default(autoincrement())
  question String
  quizId   Int      @map("quiz_id")
  quiz     Quiz     @relation(fields: [quizId], references: [id])
  answer   Answer?
  options  Option[]

  @@map("questions")
}

model Option {
  id         Int      @id @default(autoincrement())
  optionA    String   @map("option_a")
  optionB    String   @map("option_b")
  optionC    String   @map("option_c")
  optionD    String   @map("option_d")
  questionId Int      @map("question_id")
  question   Question @relation(fields: [questionId], references: [id])

  @@map("options")
}

model Answer {
  id         Int      @id @default(autoincrement())
  option     Options
  answer     String
  questionId Int      @unique @map("question_id")
  question   Question @relation(fields: [questionId], references: [id])

  @@map("answers")
}

enum Options {
  optionA  @map("option_a")
  optionB  @map("option_b")
  optionC  @map("option_c")
  optionD  @map("option_d")
}
